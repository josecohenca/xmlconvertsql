
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace CmccGPRSber130.asn {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "PDPAddress") ]
    public class PDPAddress : IASN1PreparedElement {
                    
        
	private IPAddress iPAddress_ ;
        private bool  iPAddress_selected = false ;
        
        
        
        [ASN1Element ( Name = "iPAddress", IsOptional =  false , HasTag =  true, Tag = 0, IsImplicitTag = false  , HasDefaultValue =  false )  ]
    
        public IPAddress IPAddress
        {
            get { return iPAddress_; }
            set { selectIPAddress(value); }
        }
        
                
          
        
	private ETSIAddress eTSIAddress_ ;
        private bool  eTSIAddress_selected = false ;
        
        
        
        [ASN1Element ( Name = "eTSIAddress", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public ETSIAddress ETSIAddress
        {
            get { return eTSIAddress_; }
            set { selectETSIAddress(value); }
        }
        
                
          
        public bool isIPAddressSelected () {
            return this.iPAddress_selected ;
        }

        


        public void selectIPAddress (IPAddress val) {
            this.iPAddress_ = val;
            this.iPAddress_selected = true;
            
            
                    this.eTSIAddress_selected = false;
                            
        }
        
          
        public bool isETSIAddressSelected () {
            return this.eTSIAddress_selected ;
        }

        


        public void selectETSIAddress (ETSIAddress val) {
            this.eTSIAddress_ = val;
            this.eTSIAddress_selected = true;
            
            
                    this.iPAddress_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(PDPAddress));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
