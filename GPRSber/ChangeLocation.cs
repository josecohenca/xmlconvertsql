
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace GPRSber {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "ChangeLocation", IsSet = false  )]
    public class ChangeLocation : IASN1PreparedElement {
                    
	private LocationAreaCode locationAreaCode_ ;
	
        [ASN1Element ( Name = "locationAreaCode", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public LocationAreaCode LocationAreaCode
        {
            get { return locationAreaCode_; }
            set { locationAreaCode_ = value;  }
        }
        
                
          
	private RoutingAreaCode routingAreaCode_ ;
	
        [ASN1Element ( Name = "routingAreaCode", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public RoutingAreaCode RoutingAreaCode
        {
            get { return routingAreaCode_; }
            set { routingAreaCode_ = value;  }
        }
        
                
          
	private CellId cellId_ ;
	
        private bool  cellId_present = false ;
	
        [ASN1Element ( Name = "cellId", IsOptional =  true , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public CellId CellId
        {
            get { return cellId_; }
            set { cellId_ = value; cellId_present = true;  }
        }
        
                
          
	private TimeStamp changeTime_ ;
	
        [ASN1Element ( Name = "changeTime", IsOptional =  false , HasTag =  true, Tag = 3 , HasDefaultValue =  false )  ]
    
        public TimeStamp ChangeTime
        {
            get { return changeTime_; }
            set { changeTime_ = value;  }
        }
        
                
  
        public bool isCellIdPresent () {
            return this.cellId_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ChangeLocation));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
