
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System;
using org.bn.attributes;
using org.bn.attributes.constraints;
using org.bn.coders;
using org.bn.types;
using org.bn;

namespace GPRSber {


    [ASN1PreparedElement]
    [ASN1Choice ( Name = "IPBinaryAddress") ]
    public class IPBinaryAddress : IASN1PreparedElement {
                    
        
	private byte[] iPBinV4Address_ ;
        private bool  iPBinV4Address_selected = false ;
        
        
        
        [ASN1Element ( Name = "iPBinV4Address", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    [ASN1OctetString( Name = "" )]
    
            [ASN1SizeConstraint ( Max = 4L )]
        
        public byte[] IPBinV4Address
        {
            get { return iPBinV4Address_; }
            set { selectIPBinV4Address(value); }
        }
        
                
          
        
	private byte[] iPBinV6Address_ ;
        private bool  iPBinV6Address_selected = false ;
        
        
        
        [ASN1Element ( Name = "iPBinV6Address", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    [ASN1OctetString( Name = "" )]
    
            [ASN1SizeConstraint ( Max = 16L )]
        
        public byte[] IPBinV6Address
        {
            get { return iPBinV6Address_; }
            set { selectIPBinV6Address(value); }
        }
        
                
          
        public bool isIPBinV4AddressSelected () {
            return this.iPBinV4Address_selected ;
        }

        


        public void selectIPBinV4Address (byte[] val) {
            this.iPBinV4Address_ = val;
            this.iPBinV4Address_selected = true;
            
            
                    this.iPBinV6Address_selected = false;
                            
        }
        
          
        public bool isIPBinV6AddressSelected () {
            return this.iPBinV6Address_selected ;
        }

        


        public void selectIPBinV6Address (byte[] val) {
            this.iPBinV6Address_ = val;
            this.iPBinV6Address_selected = true;
            
            
                    this.iPBinV4Address_selected = false;
                            
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(IPBinaryAddress));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
            
}
